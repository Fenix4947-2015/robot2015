// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4947.robot2015;

import org.usfirst.frc4947.robot2015.commands.AutonomousCommand;
import org.usfirst.frc4947.robot2015.commands.CloseHook;
import org.usfirst.frc4947.robot2015.commands.ConveyorElevatorHome;
import org.usfirst.frc4947.robot2015.commands.ConveyorElevatorManual;
import org.usfirst.frc4947.robot2015.commands.ConveyorElevatorPosition;
import org.usfirst.frc4947.robot2015.commands.ConveyorIn;
import org.usfirst.frc4947.robot2015.commands.ConveyorOut;
import org.usfirst.frc4947.robot2015.commands.ConveyorStop;
import org.usfirst.frc4947.robot2015.commands.OpenHook;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
	public enum XBoxAxis{
		LeftStickX(1),
		LeftStickY(2),
		Trigger(3),
		RightStickX(4),
		RightStickY(5);		

		private int value;
		XBoxAxis(int value){
			this.value = value;
		}
		
		public int getValue() {
			return value;
		}
	}
	
	public enum XBoxButton{
		A(1),
		B(2),
		X(3),
		Y(4),
		LB(5),
		RB(6),
		Back(7),
		Start(8);

		private int value;
		XBoxButton(int value){
			this.value = value;
		}
		
		public int getValue() {
			return value;
		}
	}	
	
    private Joystick joystickDriver = new Joystick(0);
    private Joystick joystickHelper = new Joystick(1);

    @SuppressWarnings("unused")
	public OI() {
        // Create some buttons
        JoystickButton driverA = new JoystickButton(joystickDriver, 1);
        JoystickButton driverB = new JoystickButton(joystickDriver, 2);
        JoystickButton driverX = new JoystickButton(joystickDriver, 3);
        JoystickButton driverY = new JoystickButton(joystickDriver, 4);
        JoystickButton driverLB = new JoystickButton(joystickDriver, 5);
        JoystickButton driverRB = new JoystickButton(joystickDriver, 6);
        JoystickButton driverBack = new JoystickButton(joystickDriver, 7);
        JoystickButton driverStart = new JoystickButton(joystickDriver, 8);
        
        JoystickButton helperA = new JoystickButton(joystickHelper, 1);
        JoystickButton helperB = new JoystickButton(joystickHelper, 2);
        JoystickButton helperX = new JoystickButton(joystickHelper, 3);
        JoystickButton helperY = new JoystickButton(joystickHelper, 4);
        JoystickButton helperLB = new JoystickButton(joystickHelper, 5);
        JoystickButton helperRB = new JoystickButton(joystickHelper, 6);
        JoystickButton helperBack = new JoystickButton(joystickHelper, 7);
        JoystickButton helperStart = new JoystickButton(joystickHelper, 8);

        // TODO Linker les boutons avec des commandes comme plus bas
        //helperA.whenPressed(new ConveyorIn());
        
    	// SmartDashboard Buttons
        SmartDashboard.putData("AutonomousCommand", new AutonomousCommand());
        SmartDashboard.putData("ConveyorIn", new ConveyorIn());
        SmartDashboard.putData("ConveyorOut", new ConveyorOut());
        SmartDashboard.putData("ConveyorStop", new ConveyorStop());
        SmartDashboard.putData("ConveyorElevatorHome", new ConveyorElevatorHome());
        SmartDashboard.putData("ConveyorElevatorManual", new ConveyorElevatorManual());
        SmartDashboard.putData("ConveyorElevatorPosition0", new ConveyorElevatorPosition(0));
        SmartDashboard.putData("ConveyorElevatorPosition1000", new ConveyorElevatorPosition(1000));
        SmartDashboard.putData("ConveyorElevatorPosition5000", new ConveyorElevatorPosition(5000));
        SmartDashboard.putData("OpenHook", new OpenHook());
        SmartDashboard.putData("CloseHook", new CloseHook());
    }
    
    public Joystick getJoystickDriver() {
        return joystickDriver;
    }

    public Joystick getJoystickHelper() {
        return joystickHelper;
    }
}

